version: '3.8'

services:
  # Base de données TimescaleDB pour les données de marché
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: trading_timescaledb
    environment:
      POSTGRES_DB: trading_data
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-trading_password}
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./bot/data/sql:/docker-entrypoint-initdb.d
    networks:
      - trading_network

  # Redis pour le cache et la messagerie
  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading_network

  # Prometheus pour les métriques
  prometheus:
    image: prom/prometheus:latest
    container_name: trading_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./bot/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - trading_network

  # Grafana pour les dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./bot/monitoring/grafana:/etc/grafana/provisioning
    networks:
      - trading_network

  # Bot de trading (à développer)
  trading_bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_bot_main
    environment:
      - CONFIG_PATH=/app/bot_config.yaml
      - DB_HOST=timescaledb
      - REDIS_HOST=redis
      - PROMETHEUS_HOST=prometheus
    volumes:
      - ./bot_config.yaml:/app/bot_config.yaml:ro
      - ./logs:/app/logs
    depends_on:
      - timescaledb
      - redis
      - prometheus
    networks:
      - trading_network
    restart: unless-stopped

volumes:
  timescale_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  trading_network:
    driver: bridge
